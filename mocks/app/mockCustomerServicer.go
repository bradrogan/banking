// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bradrogan/banking/app (interfaces: CustomerServicer)

// Package app is a generated GoMock package.
package app

import (
	reflect "reflect"

	customer "github.com/bradrogan/banking/domain/customer"
	dto "github.com/bradrogan/banking/dto"
	errs "github.com/bradrogan/banking/errs"
	gomock "github.com/golang/mock/gomock"
)

// MockCustomerServicer is a mock of CustomerServicer interface.
type MockCustomerServicer struct {
	ctrl     *gomock.Controller
	recorder *MockCustomerServicerMockRecorder
}

// MockCustomerServicerMockRecorder is the mock recorder for MockCustomerServicer.
type MockCustomerServicerMockRecorder struct {
	mock *MockCustomerServicer
}

// NewMockCustomerServicer creates a new mock instance.
func NewMockCustomerServicer(ctrl *gomock.Controller) *MockCustomerServicer {
	mock := &MockCustomerServicer{ctrl: ctrl}
	mock.recorder = &MockCustomerServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomerServicer) EXPECT() *MockCustomerServicerMockRecorder {
	return m.recorder
}

// GetAllCustomers mocks base method.
func (m *MockCustomerServicer) GetAllCustomers() ([]dto.CustomerResponse, *errs.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllCustomers")
	ret0, _ := ret[0].([]dto.CustomerResponse)
	ret1, _ := ret[1].(*errs.AppError)
	return ret0, ret1
}

// GetAllCustomers indicates an expected call of GetAllCustomers.
func (mr *MockCustomerServicerMockRecorder) GetAllCustomers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllCustomers", reflect.TypeOf((*MockCustomerServicer)(nil).GetAllCustomers))
}

// GetCustomer mocks base method.
func (m *MockCustomerServicer) GetCustomer(arg0 string) (*dto.CustomerResponse, *errs.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCustomer", arg0)
	ret0, _ := ret[0].(*dto.CustomerResponse)
	ret1, _ := ret[1].(*errs.AppError)
	return ret0, ret1
}

// GetCustomer indicates an expected call of GetCustomer.
func (mr *MockCustomerServicerMockRecorder) GetCustomer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomer", reflect.TypeOf((*MockCustomerServicer)(nil).GetCustomer), arg0)
}

// GetCustomersByStatus mocks base method.
func (m *MockCustomerServicer) GetCustomersByStatus(arg0 customer.Status) ([]dto.CustomerResponse, *errs.AppError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCustomersByStatus", arg0)
	ret0, _ := ret[0].([]dto.CustomerResponse)
	ret1, _ := ret[1].(*errs.AppError)
	return ret0, ret1
}

// GetCustomersByStatus indicates an expected call of GetCustomersByStatus.
func (mr *MockCustomerServicerMockRecorder) GetCustomersByStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomersByStatus", reflect.TypeOf((*MockCustomerServicer)(nil).GetCustomersByStatus), arg0)
}
